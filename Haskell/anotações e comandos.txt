arquivos de exemplo: 
https://github.com/euzin4/2025.1/tree/1d18319d2465217700bd821aa80f3f9938448460/linguagens%20de%20programa%C3%A7%C3%A3o/25.03.25%20arq%20de%20aula

no terminal:
ghci    --abre o compilador haskell
:r      --da reload no arquivo aberto

no arquivo:
-- comentario de uma linha
{- comentario de varias linhas -}

[1,2,3]  --lista (só pode ser de um tipo)
head  --retorna o primeiro item da lista
tail  --retorna todos os itens da lista exceto o primeiro

(1,'b')  --tupla (pode ter mais de um tipo)
fst  --retorna o primeiro elemento da tupla
snd  --retorna o segundo elemento da tupla

funcao :: entrada -> retorno  --declaraçao de uma funçao (funcao: nome da funcao, entrada: tipo da entrada, retorno: tipo do retorno, EX: funcao :: String -> String)
funcao 0 = 1                  --codigo da funçao (se a entrada for 0 retorna 1)

variavel <- getLine  --entrada de dados pelo teclado
putStrLn "frase printada"  --print simples
putStrLn ("frase fixa " ++ variavel ++ " frase fixa")  --print com variavel

--Função Lambda:
soma x y = x+y  --funçao normal
\ x y -> x+y  --funçao Lambda
--os dois recebem 'x' e 'y' como parametros mas a funçao lambda não da nome a funçao

